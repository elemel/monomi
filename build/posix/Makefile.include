# Project directories.
ifndef ROOT_DIR
	ROOT_DIR := ../..
endif
ASSETS_DIR := $(ROOT_DIR)/assets
EXT_DIR := $(ROOT_DIR)/ext
SRC_DIR := $(ROOT_DIR)/src

# External dependencies.
BOOST_INCLUDE_DIR := $(EXT_DIR)/boost/include
BOOST_LIB_DIR := $(EXT_DIR)/boost/lib
BOX2D_INCLUDE_DIR := $(EXT_DIR)/box2d/include
BOX2D_LIB_DIR := $(EXT_DIR)/box2d/lib
RAPIDXML_INCLUDE_DIR := $(EXT_DIR)/rapidxml/include
SDL_INCLUDE_DIR := $(EXT_DIR)/sdl/include
SDL_LIB_DIR := $(EXT_DIR)/sdl/lib

# Build platform.
#
# TODO: Autodetect.
PLATFORM := mac
ifeq ($(PLATFORM), mac)
	CPPFLAGS += -I$(BOOST_INCLUDE_DIR) -I$(BOX2D_INCLUDE_DIR) -I$(RAPIDXML_INCLUDE_DIR) -I$(SDL_INCLUDE_DIR) -I$(SRC_DIR)
	LDFLAGS += -L$(BOX2D_LIB_DIR) -lBox2D -L$(SDL_LIB_DIR) -lSDL -framework OpenGL
endif

SRCS := $(notdir $(wildcard $(SRC_DIR)/*.cpp))
OBJS := $(patsubst %.cpp,%.o,$(SRCS))

all: monomi

run: monomi
	./monomi $(ASSETS_DIR)

depend: $(SRCS)
	makedepend -I$(SRC_DIR) -Y $(SRCS) > depend.log 2>&1

clean:
	rm -fr monomi monomi.dSYM *.cpp *.o

%.cpp: $(SRC_DIR)/%.cpp
	cp $< $@

monomi: $(OBJS)
	g++ -o monomi $(OBJS) $(LDFLAGS)

.PHONY: all clean depend run

# DO NOT DELETE
